// clang-format off
// Generated file (from: rotated_bbox_transform.mod.py). Do not edit
std::vector<MixedTypedExample>& get_examples() {
static std::vector<MixedTypedExample> examples = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {0.0f, 250.0f, 290.0f, 300.0f, 280.0f, 0.1f, 1.0f, 121.0f, 60.5f, 2.0f, 0.5f, -200.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.05f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, 185.0f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, -185.0f}}, {1, {0.2f, 0.2f, 0.1f, 0.1f, 0.01f, 0.3f, -0.1f, -0.2f, 0.1f, -0.01f, -0.5f, 0.2f, 0.2f, -0.5f, -0.1f, -0.1f, -0.1f, 2.5f, 3.0f, 1.0f, -0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2f, 1.7f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2f, -1.7f, 0.2f, 0.2f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.3f, 0.5f, -1.0f, 0.2f, 0.2f, -3.0f, -4.0f, -1.1f, 1.0f, -0.5f, 0.3f, 0.5f, -1.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f}}, {2, {512.0f, 512.0f, 1.0f, 128.0f, 256.0f, 0.5f, 256.0f, 256.0f, 0.7f, 1024.0f, 512.0f, 2.0f, 1024.0f, 512.0f, 2.0f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {280.0f, 318.0f, 366.420837f, 341.992798f, 0.672958f, 295.0f, 276.0f, 201.096008f, 341.992798f, -0.472958f, 241.0f, 121.099998f, 5.967299f, 0.367879f, -25.729584f, 241.800003f, 120.949997f, 250.000015f, 62.500004f, 37.295776f, 35.068058f, 98.56131f, 71.136116f, 198.12262f, -0.704224f, 25.0f, 60.714287f, 0.711244f, 3.887912f, 39.402824f, 17.857143f, 39.285713f, 105.557945f, 316.673828f, -29.352112f, 25.0f, 60.714287f, 0.711244f, 3.887912f, 24.597168f, 150.0f, 211.428574f, 0.177063f, 0.062286f, 0.704224f, 178.571442f, 182.5f, 130.151367f, 366.0f, 0.704224f, 150.0f, 211.428574f, 0.177054f, 0.0623f, -64.075356f, 178.571442f, 146.428574f, 130.151352f, 504.823792f, -64.075356f, 127.5f, 422.799561f, 256.0f, 177.400848f, -0.729584f, 365.0f, 548.75f, 110.363838f, 349.485474f, 10.729584f, 395.0f, 430.0f, 2707.50415f, 191.801697f, -10.729584f, 255.0f, 442.753632f, 1.0f, 137.492737f, 0.729584f}}},
  // int -> INT32 map
  {{1, {1, 1, 4, 2, 0}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples;
};

std::vector<MixedTypedExample>& get_examples_relaxed() {
static std::vector<MixedTypedExample> examples_relaxed = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {0.0f, 250.0f, 290.0f, 300.0f, 280.0f, 0.1f, 1.0f, 121.0f, 60.5f, 2.0f, 0.5f, -200.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.05f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, 185.0f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, -185.0f}}, {1, {0.2f, 0.2f, 0.1f, 0.1f, 0.01f, 0.3f, -0.1f, -0.2f, 0.1f, -0.01f, -0.5f, 0.2f, 0.2f, -0.5f, -0.1f, -0.1f, -0.1f, 2.5f, 3.0f, 1.0f, -0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2f, 1.7f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2f, -1.7f, 0.2f, 0.2f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.3f, 0.5f, -1.0f, 0.2f, 0.2f, -3.0f, -4.0f, -1.1f, 1.0f, -0.5f, 0.3f, 0.5f, -1.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f}}, {2, {512.0f, 512.0f, 1.0f, 128.0f, 256.0f, 0.5f, 256.0f, 256.0f, 0.7f, 1024.0f, 512.0f, 2.0f, 1024.0f, 512.0f, 2.0f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {280.0f, 318.0f, 366.420837f, 341.992798f, 0.672958f, 295.0f, 276.0f, 201.096008f, 341.992798f, -0.472958f, 241.0f, 121.099998f, 5.967299f, 0.367879f, -25.729584f, 241.800003f, 120.949997f, 250.000015f, 62.500004f, 37.295776f, 35.068058f, 98.56131f, 71.136116f, 198.12262f, -0.704224f, 25.0f, 60.714287f, 0.711244f, 3.887912f, 39.402824f, 17.857143f, 39.285713f, 105.557945f, 316.673828f, -29.352112f, 25.0f, 60.714287f, 0.711244f, 3.887912f, 24.597168f, 150.0f, 211.428574f, 0.177063f, 0.062286f, 0.704224f, 178.571442f, 182.5f, 130.151367f, 366.0f, 0.704224f, 150.0f, 211.428574f, 0.177054f, 0.0623f, -64.075356f, 178.571442f, 146.428574f, 130.151352f, 504.823792f, -64.075356f, 127.5f, 422.799561f, 256.0f, 177.400848f, -0.729584f, 365.0f, 548.75f, 110.363838f, 349.485474f, 10.729584f, 395.0f, 430.0f, 2707.50415f, 191.801697f, -10.729584f, 255.0f, 442.753632f, 1.0f, 137.492737f, 0.729584f}}},
  // int -> INT32 map
  {{1, {1, 1, 4, 2, 0}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_relaxed;
};

std::vector<MixedTypedExample>& get_examples_float16() {
static std::vector<MixedTypedExample> examples_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {0.0f, 250.0f, 290.0f, 300.0f, 280.0f, 0.10000000149011612f, 1.0f, 121.0f, 60.5f, 2.0f, 0.5f, -200.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.0499999523162842f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, 185.0f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, -185.0f}}, {1, {0.20000000298023224f, 0.20000000298023224f, 0.10000000149011612f, 0.10000000149011612f, 0.009999999776482582f, 0.30000001192092896f, -0.10000000149011612f, -0.20000000298023224f, 0.10000000149011612f, -0.009999999776482582f, -0.5f, 0.20000000298023224f, 0.20000000298023224f, -0.5f, -0.10000000149011612f, -0.10000000149011612f, -0.10000000149011612f, 2.5f, 3.0f, 1.0f, -0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2000000476837158f, 1.7000000476837158f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2000000476837158f, -1.7000000476837158f, 0.20000000298023224f, 0.20000000298023224f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.30000001192092896f, 0.5f, -1.0f, 0.20000000298023224f, 0.20000000298023224f, -3.0f, -4.0f, -1.100000023841858f, 1.0f, -0.5f, 0.30000001192092896f, 0.5f, -1.100000023841858f, 0.30000001192092896f, -0.20000000298023224f, 1.100000023841858f, -0.800000011920929f, -0.10000000149011612f, 0.10000000149011612f, 0.05000000074505806f, -0.5f, -0.5f, 0.10000000149011612f, 0.30000001192092896f, -0.20000000298023224f, 1.100000023841858f, -0.800000011920929f, -0.10000000149011612f, 0.10000000149011612f, 0.05000000074505806f, -0.5f, -0.5f, 0.10000000149011612f}}, {2, {512.0f, 512.0f, 1.0f, 128.0f, 256.0f, 0.5f, 256.0f, 256.0f, 0.699999988079071f, 1024.0f, 512.0f, 2.0f, 1024.0f, 512.0f, 2.0f}}},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {{1, {1, 1, 4, 2, 0}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {280.0f, 318.0f, 366.42083740234375f, 341.9927978515625f, 0.6729580163955688f, 295.0f, 276.0f, 201.09600830078125f, 341.9927978515625f, -0.4729579985141754f, 241.0f, 121.0999984741211f, 5.967298984527588f, 0.3678790032863617f, -25.729583740234375f, 241.8000030517578f, 120.94999694824219f, 250.00001525878906f, 62.500003814697266f, 37.2957763671875f, 35.068058013916016f, 98.56130981445312f, 71.13611602783203f, 198.12261962890625f, -0.7042239904403687f, 25.0f, 60.71428680419922f, 0.7112439870834351f, 3.8879120349884033f, 39.40282440185547f, 17.85714340209961f, 39.28571319580078f, 105.55794525146484f, 316.673828125f, -29.35211181640625f, 25.0f, 60.71428680419922f, 0.7112439870834351f, 3.8879120349884033f, 24.59716796875f, 150.0f, 211.42857360839844f, 0.1770630031824112f, 0.062286000698804855f, 0.7042239904403687f, 178.57144165039062f, 182.5f, 130.1513671875f, 366.0f, 0.7042239904403687f, 150.0f, 211.42857360839844f, 0.1770540028810501f, 0.062300000339746475f, -64.07535552978516f, 178.57144165039062f, 146.42857360839844f, 130.15135192871094f, 504.82379150390625f, -64.07535552978516f, 127.5f, 422.799560546875f, 256.0f, 177.40084838867188f, -0.7295839786529541f, 365.0f, 548.75f, 110.36383819580078f, 349.4854736328125f, 10.729583740234375f, 395.0f, 430.0f, 2707.504150390625f, 191.80169677734375f, -10.729583740234375f, 255.0f, 442.7536315917969f, 1.0f, 137.49273681640625f, 0.7295839786529541f}}},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_float16;
};

std::vector<MixedTypedExample>& get_examples_2() {
static std::vector<MixedTypedExample> examples_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {0.0f, 250.0f, 290.0f, 300.0f, 280.0f, 0.1f, 1.0f, 121.0f, 60.5f, 2.0f, 0.5f, -200.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.05f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, 185.0f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, -185.0f}}, {1, {0.2f, 0.2f, 0.1f, 0.1f, 0.01f, 0.3f, -0.1f, -0.2f, 0.1f, -0.01f, -0.5f, 0.2f, 0.2f, -0.5f, -0.1f, -0.1f, -0.1f, 2.5f, 3.0f, 1.0f, -0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2f, 1.7f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2f, -1.7f, 0.2f, 0.2f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.3f, 0.5f, -1.0f, 0.2f, 0.2f, -3.0f, -4.0f, -1.1f, 1.0f, -0.5f, 0.3f, 0.5f, -1.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f}}, {2, {512.0f, 512.0f, 1.0f, 128.0f, 256.0f, 0.5f, 256.0f, 256.0f, 0.7f, 1024.0f, 512.0f, 2.0f, 1024.0f, 512.0f, 2.0f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {280.0f, 318.0f, 366.420837f, 341.992798f, 0.672958f, 295.0f, 276.0f, 201.096008f, 341.992798f, -0.472958f, 120.5f, 60.549999f, 2.983649f, 0.18394f, -205.729584f, 120.900002f, 60.474998f, 125.000008f, 31.250002f, -142.704224f, 24.54764f, 68.992912f, 49.79528f, 138.685837f, -0.704224f, 17.5f, 42.5f, 0.497871f, 2.721538f, 39.402824f, 12.5f, 27.499998f, 73.890564f, 221.671677f, -29.352112f, 17.5f, 42.5f, 0.497871f, 2.721538f, -155.402832f, 105.0f, 148.0f, 0.123944f, 0.0436f, 0.704224f, 125.000008f, 127.75f, 91.105957f, 256.199982f, 0.704224f, 105.0f, 148.0f, 0.123938f, 0.04361f, -64.075356f, 125.000008f, 102.5f, 91.105942f, 353.376648f, -64.075356f, 790.0f, 860.0f, 5415.008301f, 383.603394f, 179.270416f, 730.0f, 1097.5f, 220.727676f, 698.970947f, 190.729584f, 790.0f, 860.0f, 5415.008301f, 383.603394f, -190.729584f, 730.0f, 1097.5f, 220.727676f, 698.970947f, -179.270416f}}},
  // int -> INT32 map
  {{1, {1, 1, 4, 2, 0}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_2;
};

std::vector<MixedTypedExample>& get_examples_relaxed_2() {
static std::vector<MixedTypedExample> examples_relaxed_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {0.0f, 250.0f, 290.0f, 300.0f, 280.0f, 0.1f, 1.0f, 121.0f, 60.5f, 2.0f, 0.5f, -200.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.05f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, 185.0f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, -185.0f}}, {1, {0.2f, 0.2f, 0.1f, 0.1f, 0.01f, 0.3f, -0.1f, -0.2f, 0.1f, -0.01f, -0.5f, 0.2f, 0.2f, -0.5f, -0.1f, -0.1f, -0.1f, 2.5f, 3.0f, 1.0f, -0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2f, 1.7f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2f, -1.7f, 0.2f, 0.2f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.3f, 0.5f, -1.0f, 0.2f, 0.2f, -3.0f, -4.0f, -1.1f, 1.0f, -0.5f, 0.3f, 0.5f, -1.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f}}, {2, {512.0f, 512.0f, 1.0f, 128.0f, 256.0f, 0.5f, 256.0f, 256.0f, 0.7f, 1024.0f, 512.0f, 2.0f, 1024.0f, 512.0f, 2.0f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {280.0f, 318.0f, 366.420837f, 341.992798f, 0.672958f, 295.0f, 276.0f, 201.096008f, 341.992798f, -0.472958f, 120.5f, 60.549999f, 2.983649f, 0.18394f, -205.729584f, 120.900002f, 60.474998f, 125.000008f, 31.250002f, -142.704224f, 24.54764f, 68.992912f, 49.79528f, 138.685837f, -0.704224f, 17.5f, 42.5f, 0.497871f, 2.721538f, 39.402824f, 12.5f, 27.499998f, 73.890564f, 221.671677f, -29.352112f, 17.5f, 42.5f, 0.497871f, 2.721538f, -155.402832f, 105.0f, 148.0f, 0.123944f, 0.0436f, 0.704224f, 125.000008f, 127.75f, 91.105957f, 256.199982f, 0.704224f, 105.0f, 148.0f, 0.123938f, 0.04361f, -64.075356f, 125.000008f, 102.5f, 91.105942f, 353.376648f, -64.075356f, 790.0f, 860.0f, 5415.008301f, 383.603394f, 179.270416f, 730.0f, 1097.5f, 220.727676f, 698.970947f, 190.729584f, 790.0f, 860.0f, 5415.008301f, 383.603394f, -190.729584f, 730.0f, 1097.5f, 220.727676f, 698.970947f, -179.270416f}}},
  // int -> INT32 map
  {{1, {1, 1, 4, 2, 0}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_relaxed_2;
};

std::vector<MixedTypedExample>& get_examples_float16_2() {
static std::vector<MixedTypedExample> examples_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {0.0f, 250.0f, 290.0f, 300.0f, 280.0f, 0.10000000149011612f, 1.0f, 121.0f, 60.5f, 2.0f, 0.5f, -200.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.0499999523162842f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, 185.0f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, -185.0f}}, {1, {0.20000000298023224f, 0.20000000298023224f, 0.10000000149011612f, 0.10000000149011612f, 0.009999999776482582f, 0.30000001192092896f, -0.10000000149011612f, -0.20000000298023224f, 0.10000000149011612f, -0.009999999776482582f, -0.5f, 0.20000000298023224f, 0.20000000298023224f, -0.5f, -0.10000000149011612f, -0.10000000149011612f, -0.10000000149011612f, 2.5f, 3.0f, 1.0f, -0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2000000476837158f, 1.7000000476837158f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2000000476837158f, -1.7000000476837158f, 0.20000000298023224f, 0.20000000298023224f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.30000001192092896f, 0.5f, -1.0f, 0.20000000298023224f, 0.20000000298023224f, -3.0f, -4.0f, -1.100000023841858f, 1.0f, -0.5f, 0.30000001192092896f, 0.5f, -1.100000023841858f, 0.30000001192092896f, -0.20000000298023224f, 1.100000023841858f, -0.800000011920929f, -0.10000000149011612f, 0.10000000149011612f, 0.05000000074505806f, -0.5f, -0.5f, 0.10000000149011612f, 0.30000001192092896f, -0.20000000298023224f, 1.100000023841858f, -0.800000011920929f, -0.10000000149011612f, 0.10000000149011612f, 0.05000000074505806f, -0.5f, -0.5f, 0.10000000149011612f}}, {2, {512.0f, 512.0f, 1.0f, 128.0f, 256.0f, 0.5f, 256.0f, 256.0f, 0.699999988079071f, 1024.0f, 512.0f, 2.0f, 1024.0f, 512.0f, 2.0f}}},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {{1, {1, 1, 4, 2, 0}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {280.0f, 318.0f, 366.42083740234375f, 341.9927978515625f, 0.6729580163955688f, 295.0f, 276.0f, 201.09600830078125f, 341.9927978515625f, -0.4729579985141754f, 120.5f, 60.54999923706055f, 2.9836490154266357f, 0.18393999338150024f, -205.72958374023438f, 120.9000015258789f, 60.474998474121094f, 125.00000762939453f, 31.250001907348633f, -142.7042236328125f, 24.547639846801758f, 68.99291229248047f, 49.79528045654297f, 138.6858367919922f, -0.7042239904403687f, 17.5f, 42.5f, 0.4978710114955902f, 2.7215380668640137f, 39.40282440185547f, 12.5f, 27.499998092651367f, 73.89056396484375f, 221.6716766357422f, -29.35211181640625f, 17.5f, 42.5f, 0.4978710114955902f, 2.7215380668640137f, -155.40283203125f, 105.0f, 148.0f, 0.1239439994096756f, 0.04360000044107437f, 0.7042239904403687f, 125.00000762939453f, 127.75f, 91.10595703125f, 256.1999816894531f, 0.7042239904403687f, 105.0f, 148.0f, 0.12393800169229507f, 0.04360999912023544f, -64.07535552978516f, 125.00000762939453f, 102.5f, 91.10594177246094f, 353.37664794921875f, -64.07535552978516f, 790.0f, 860.0f, 5415.00830078125f, 383.6033935546875f, 179.27041625976562f, 730.0f, 1097.5f, 220.72767639160156f, 698.970947265625f, 190.72958374023438f, 790.0f, 860.0f, 5415.00830078125f, 383.6033935546875f, -190.72958374023438f, 730.0f, 1097.5f, 220.72767639160156f, 698.970947265625f, -179.27041625976562f}}},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_float16_2;
};

std::vector<MixedTypedExample>& get_examples_3() {
static std::vector<MixedTypedExample> examples_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {0.0f, 250.0f, 290.0f, 300.0f, 280.0f, 0.1f, 1.0f, 121.0f, 60.5f, 2.0f, 0.5f, -200.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.05f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, 185.0f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, -185.0f}}, {1, {0.2f, 0.2f, 0.1f, 0.1f, 0.01f, 0.3f, -0.1f, -0.2f, 0.1f, -0.01f, -0.5f, 0.2f, 0.2f, -0.5f, -0.1f, -0.1f, -0.1f, 2.5f, 3.0f, 1.0f, -0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2f, 1.7f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2f, -1.7f, 0.2f, 0.2f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.3f, 0.5f, -1.0f, 0.2f, 0.2f, -3.0f, -4.0f, -1.1f, 1.0f, -0.5f, 0.3f, 0.5f, -1.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f}}, {2, {512.0f, 512.0f, 1.0f, 128.0f, 256.0f, 0.5f, 256.0f, 256.0f, 0.7f, 1024.0f, 512.0f, 2.0f, 1024.0f, 512.0f, 2.0f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {280.0f, 318.0f, 366.420837f, 341.992767f, 0.672958f, 295.0f, 276.0f, 201.096008f, 341.992767f, -0.472958f, 120.5f, 60.549999f, 2.983649f, 0.18394f, -25.729584f, 120.900002f, 60.474998f, 125.000008f, 31.250002f, 37.295776f, 12.5f, 27.499998f, 73.890564f, 221.671677f, -0.704224f, 17.5f, 42.5f, 0.497871f, 2.721538f, 39.402824f, 12.5f, 27.499998f, 73.890564f, 221.671677f, -29.352112f, 17.5f, 42.5f, 0.497871f, 2.721538f, 24.597168f, 105.0f, 148.0f, 0.123938f, 0.04361f, 0.704224f, 125.000008f, 102.5f, 91.105942f, 353.376648f, 0.704224f, 105.0f, 148.0f, 0.123938f, 0.04361f, -64.075356f, 125.000008f, 102.5f, 91.105942f, 353.376648f, -64.075356f, 790.0f, 860.0f, 5415.008301f, 383.603394f, -0.729584f, 730.0f, 1097.5f, 220.727676f, 698.970947f, 10.729584f, 790.0f, 860.0f, 5415.008301f, 383.603394f, -10.729584f, 730.0f, 1097.5f, 220.727676f, 698.970947f, 0.729584f}}},
  // int -> INT32 map
  {{1, {1, 1, 4, 2, 0}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_3;
};

std::vector<MixedTypedExample>& get_examples_relaxed_3() {
static std::vector<MixedTypedExample> examples_relaxed_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {0.0f, 250.0f, 290.0f, 300.0f, 280.0f, 0.1f, 1.0f, 121.0f, 60.5f, 2.0f, 0.5f, -200.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.05f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, 185.0f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, -185.0f}}, {1, {0.2f, 0.2f, 0.1f, 0.1f, 0.01f, 0.3f, -0.1f, -0.2f, 0.1f, -0.01f, -0.5f, 0.2f, 0.2f, -0.5f, -0.1f, -0.1f, -0.1f, 2.5f, 3.0f, 1.0f, -0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2f, 1.7f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2f, -1.7f, 0.2f, 0.2f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.3f, 0.5f, -1.0f, 0.2f, 0.2f, -3.0f, -4.0f, -1.1f, 1.0f, -0.5f, 0.3f, 0.5f, -1.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f, 0.3f, -0.2f, 1.1f, -0.8f, -0.1f, 0.1f, 0.05f, -0.5f, -0.5f, 0.1f}}, {2, {512.0f, 512.0f, 1.0f, 128.0f, 256.0f, 0.5f, 256.0f, 256.0f, 0.7f, 1024.0f, 512.0f, 2.0f, 1024.0f, 512.0f, 2.0f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {280.0f, 318.0f, 366.420837f, 341.992767f, 0.672958f, 295.0f, 276.0f, 201.096008f, 341.992767f, -0.472958f, 120.5f, 60.549999f, 2.983649f, 0.18394f, -25.729584f, 120.900002f, 60.474998f, 125.000008f, 31.250002f, 37.295776f, 12.5f, 27.499998f, 73.890564f, 221.671677f, -0.704224f, 17.5f, 42.5f, 0.497871f, 2.721538f, 39.402824f, 12.5f, 27.499998f, 73.890564f, 221.671677f, -29.352112f, 17.5f, 42.5f, 0.497871f, 2.721538f, 24.597168f, 105.0f, 148.0f, 0.123938f, 0.04361f, 0.704224f, 125.000008f, 102.5f, 91.105942f, 353.376648f, 0.704224f, 105.0f, 148.0f, 0.123938f, 0.04361f, -64.075356f, 125.000008f, 102.5f, 91.105942f, 353.376648f, -64.075356f, 790.0f, 860.0f, 5415.008301f, 383.603394f, -0.729584f, 730.0f, 1097.5f, 220.727676f, 698.970947f, 10.729584f, 790.0f, 860.0f, 5415.008301f, 383.603394f, -10.729584f, 730.0f, 1097.5f, 220.727676f, 698.970947f, 0.729584f}}},
  // int -> INT32 map
  {{1, {1, 1, 4, 2, 0}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_relaxed_3;
};

std::vector<MixedTypedExample>& get_examples_float16_3() {
static std::vector<MixedTypedExample> examples_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {0.0f, 250.0f, 290.0f, 300.0f, 280.0f, 0.10000000149011612f, 1.0f, 121.0f, 60.5f, 2.0f, 0.5f, -200.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 2.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.0499999523162842f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, 185.0f, 3.0f, 700.0f, 1050.0f, 600.0f, 1900.0f, -185.0f}}, {1, {0.20000000298023224f, 0.20000000298023224f, 0.10000000149011612f, 0.10000000149011612f, 0.009999999776482582f, 0.30000001192092896f, -0.10000000149011612f, -0.20000000298023224f, 0.10000000149011612f, -0.009999999776482582f, -0.5f, 0.20000000298023224f, 0.20000000298023224f, -0.5f, -0.10000000149011612f, -0.10000000149011612f, -0.10000000149011612f, 2.5f, 3.0f, 1.0f, -0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2000000476837158f, 1.7000000476837158f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2000000476837158f, -1.7000000476837158f, 0.20000000298023224f, 0.20000000298023224f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.30000001192092896f, 0.5f, -1.0f, 0.20000000298023224f, 0.20000000298023224f, -3.0f, -4.0f, -1.100000023841858f, 1.0f, -0.5f, 0.30000001192092896f, 0.5f, -1.100000023841858f, 0.30000001192092896f, -0.20000000298023224f, 1.100000023841858f, -0.800000011920929f, -0.10000000149011612f, 0.10000000149011612f, 0.05000000074505806f, -0.5f, -0.5f, 0.10000000149011612f, 0.30000001192092896f, -0.20000000298023224f, 1.100000023841858f, -0.800000011920929f, -0.10000000149011612f, 0.10000000149011612f, 0.05000000074505806f, -0.5f, -0.5f, 0.10000000149011612f}}, {2, {512.0f, 512.0f, 1.0f, 128.0f, 256.0f, 0.5f, 256.0f, 256.0f, 0.699999988079071f, 1024.0f, 512.0f, 2.0f, 1024.0f, 512.0f, 2.0f}}},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {{1, {1, 1, 4, 2, 0}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {280.0f, 318.0f, 366.42083740234375f, 341.9927673339844f, 0.6729580163955688f, 295.0f, 276.0f, 201.09600830078125f, 341.9927673339844f, -0.4729579985141754f, 120.5f, 60.54999923706055f, 2.9836490154266357f, 0.18393999338150024f, -25.729583740234375f, 120.9000015258789f, 60.474998474121094f, 125.00000762939453f, 31.250001907348633f, 37.2957763671875f, 12.5f, 27.499998092651367f, 73.89056396484375f, 221.6716766357422f, -0.7042239904403687f, 17.5f, 42.5f, 0.4978710114955902f, 2.7215380668640137f, 39.40282440185547f, 12.5f, 27.499998092651367f, 73.89056396484375f, 221.6716766357422f, -29.35211181640625f, 17.5f, 42.5f, 0.4978710114955902f, 2.7215380668640137f, 24.59716796875f, 105.0f, 148.0f, 0.12393800169229507f, 0.04360999912023544f, 0.7042239904403687f, 125.00000762939453f, 102.5f, 91.10594177246094f, 353.37664794921875f, 0.7042239904403687f, 105.0f, 148.0f, 0.12393800169229507f, 0.04360999912023544f, -64.07535552978516f, 125.00000762939453f, 102.5f, 91.10594177246094f, 353.37664794921875f, -64.07535552978516f, 790.0f, 860.0f, 5415.00830078125f, 383.6033935546875f, -0.7295839786529541f, 730.0f, 1097.5f, 220.72767639160156f, 698.970947265625f, 10.729583740234375f, 790.0f, 860.0f, 5415.00830078125f, 383.6033935546875f, -10.729583740234375f, 730.0f, 1097.5f, 220.72767639160156f, 698.970947265625f, 0.7295839786529541f}}},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_float16_3;
};

std::vector<MixedTypedExample>& get_examples_single_batch() {
static std::vector<MixedTypedExample> examples_single_batch = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.05f}}, {1, {-0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2f, 1.7f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2f, -1.7f, 0.2f, 0.2f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.3f, 0.5f, -1.0f, 0.2f, 0.2f, -3.0f, -4.0f, -1.1f, 1.0f, -0.5f, 0.3f, 0.5f, -1.1f}}, {2, {256.0f, 256.0f, 0.7f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {12.5f, 27.499998f, 73.890564f, 221.671677f, -0.704224f, 17.5f, 42.5f, 0.497871f, 2.721538f, 39.402824f, 12.5f, 27.499998f, 73.890564f, 221.671677f, -29.352112f, 17.5f, 42.5f, 0.497871f, 2.721538f, 24.597168f, 105.0f, 148.0f, 0.123938f, 0.04361f, 0.704224f, 125.000008f, 102.5f, 91.105942f, 353.376648f, 0.704224f, 105.0f, 148.0f, 0.123938f, 0.04361f, -64.075356f, 125.000008f, 102.5f, 91.105942f, 353.376648f, -64.075356f}}},
  // int -> INT32 map
  {{1, {4}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_single_batch;
};

std::vector<MixedTypedExample>& get_examples_single_batch_relaxed() {
static std::vector<MixedTypedExample> examples_single_batch_relaxed = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.05f}}, {1, {-0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2f, 1.7f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2f, -1.7f, 0.2f, 0.2f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.3f, 0.5f, -1.0f, 0.2f, 0.2f, -3.0f, -4.0f, -1.1f, 1.0f, -0.5f, 0.3f, 0.5f, -1.1f}}, {2, {256.0f, 256.0f, 0.7f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {12.5f, 27.499998f, 73.890564f, 221.671677f, -0.704224f, 17.5f, 42.5f, 0.497871f, 2.721538f, 39.402824f, 12.5f, 27.499998f, 73.890564f, 221.671677f, -29.352112f, 17.5f, 42.5f, 0.497871f, 2.721538f, 24.597168f, 105.0f, 148.0f, 0.123938f, 0.04361f, 0.704224f, 125.000008f, 102.5f, 91.105942f, 353.376648f, 0.704224f, 105.0f, 148.0f, 0.123938f, 0.04361f, -64.075356f, 125.000008f, 102.5f, 91.105942f, 353.376648f, -64.075356f}}},
  // int -> INT32 map
  {{1, {4}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_single_batch_relaxed;
};

std::vector<MixedTypedExample>& get_examples_single_batch_float16() {
static std::vector<MixedTypedExample> examples_single_batch_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 15.0f, 35.0f, 10.0f, 30.0f, -58.0f, 100.0f, 135.0f, 50.0f, 130.0f, 58.0f, 100.0f, 135.0f, 50.0f, 130.0f, -1.0499999523162842f}}, {1, {-0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 0.5f, 0.5f, -1.5f, -1.2000000476837158f, 1.7000000476837158f, -0.5f, -0.5f, 1.0f, 1.0f, 0.5f, 0.5f, 0.5f, -1.5f, -1.2000000476837158f, -1.7000000476837158f, 0.20000000298023224f, 0.20000000298023224f, -3.0f, -4.0f, -1.0f, 1.0f, -0.5f, 0.30000001192092896f, 0.5f, -1.0f, 0.20000000298023224f, 0.20000000298023224f, -3.0f, -4.0f, -1.100000023841858f, 1.0f, -0.5f, 0.30000001192092896f, 0.5f, -1.100000023841858f}}, {2, {256.0f, 256.0f, 0.699999988079071f}}},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {{1, {4}}},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {12.5f, 27.499998092651367f, 73.89056396484375f, 221.6716766357422f, -0.7042239904403687f, 17.5f, 42.5f, 0.4978710114955902f, 2.7215380668640137f, 39.40282440185547f, 12.5f, 27.499998092651367f, 73.89056396484375f, 221.6716766357422f, -29.35211181640625f, 17.5f, 42.5f, 0.4978710114955902f, 2.7215380668640137f, 24.59716796875f, 105.0f, 148.0f, 0.12393800169229507f, 0.04360999912023544f, 0.7042239904403687f, 125.00000762939453f, 102.5f, 91.10594177246094f, 353.37664794921875f, 0.7042239904403687f, 105.0f, 148.0f, 0.12393800169229507f, 0.04360999912023544f, -64.07535552978516f, 125.00000762939453f, 102.5f, 91.10594177246094f, 353.37664794921875f, -64.07535552978516f}}},
  // int -> BOOL8 map
  {},
  // int -> QUANT8_SYMM_PER_CHANNEL map
  {},
}
},
}, // End of an example
};
return examples_single_batch_float16;
};

